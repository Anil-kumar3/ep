{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/ang-quagga/ang-quagga.component.css","webpack:///./src/app/components/ang-quagga/ang-quagga.component.html","webpack:///./src/app/components/ang-quagga/ang-quagga.component.ts","webpack:///./src/app/components/bar-code-scanner/bar-code-scanner.component.css","webpack:///./src/app/components/bar-code-scanner/bar-code-scanner.component.html","webpack:///./src/app/components/bar-code-scanner/bar-code-scanner.component.ts","webpack:///./src/app/components/employee-list/employee-list.component.css","webpack:///./src/app/components/employee-list/employee-list.component.html","webpack:///./src/app/components/employee-list/employee-list.component.ts","webpack:///./src/app/components/employee-user/employee-user.component.css","webpack:///./src/app/components/employee-user/employee-user.component.html","webpack:///./src/app/components/employee-user/employee-user.component.ts","webpack:///./src/app/components/homepage/homepage.component.css","webpack:///./src/app/components/homepage/homepage.component.html","webpack:///./src/app/components/homepage/homepage.component.ts","webpack:///./src/app/components/image-capture/image-capture.component.css","webpack:///./src/app/components/image-capture/image-capture.component.html","webpack:///./src/app/components/image-capture/image-capture.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/quagga/quagga.component.css","webpack:///./src/app/components/quagga/quagga.component.html","webpack:///./src/app/components/quagga/quagga.component.ts","webpack:///./src/app/components/scanner/scanner.component.css","webpack:///./src/app/components/scanner/scanner.component.html","webpack:///./src/app/components/scanner/scanner.component.ts","webpack:///./src/app/components/scanner/scanner.service.ts","webpack:///./src/app/main-nav/main-nav.component.css","webpack:///./src/app/main-nav/main-nav.component.html","webpack:///./src/app/main-nav/main-nav.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//Components\r\nimport { LoginComponent }      from './components/login/login.component';\r\nimport { HomepageComponent }      from './components/homepage/homepage.component';\r\nimport { EmployeeListComponent }      from './components/employee-list/employee-list.component';\r\nimport { EmployeeUserComponent }      from './components/employee-user/employee-user.component';\r\nimport { ScannerComponent }      from './components/scanner/scanner.component';\r\nimport { BarCodeScannerComponent }      from './components/bar-code-scanner/bar-code-scanner.component';\r\nimport { QuaggaComponent }      from './components/quagga/quagga.component';\r\nimport { AngQuaggaComponent }      from './components/ang-quagga/ang-quagga.component';\r\nimport { ImageCaptureComponent }      from './components/image-capture/image-capture.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'home', component: HomepageComponent },\r\n  { path: 'employeelist', component: EmployeeListComponent },\r\n  { path: 'employee/:id', component: EmployeeUserComponent },\r\n  { path: 'scanner', component: ScannerComponent },\r\n  { path: 'bar-codescanner', component: BarCodeScannerComponent },\r\n  { path: 'quagga', component: QuaggaComponent },\r\n  { path: 'ang-quagga', component: AngQuaggaComponent },\r\n  { path: 'image-capture', component: ImageCaptureComponent },\r\n];\r\n//ScannerComponent\r\n//BarCodeScannerComponent\r\n//QuaggaComponent\r\n//AngQuaggaComponent\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n    \r\n  ],exports:[RouterModule],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n\r\nexport class AppComponent {\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport {DataService} from  './services/data.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatButtonModule, MatToolbarModule, MatSidenavModule, MatIconModule, MatListModule} from '@angular/material';\r\nimport { MainNavComponent } from './main-nav/main-nav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { HomepageComponent } from './components/homepage/homepage.component'; \r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { BarecodeScannerLivestreamModule } from 'ngx-barcode-scanner';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\nimport { EmployeeListComponent } from './components/employee-list/employee-list.component';\r\nimport { EmployeeUserComponent } from './components/employee-user/employee-user.component';\r\nimport { ScannerComponent } from './components/scanner/scanner.component';\r\n\r\nimport {QrCodeReader} from  './components/scanner/scanner.service';\r\nimport { BarCodeScannerComponent } from './components/bar-code-scanner/bar-code-scanner.component';\r\nimport { NgxBarcodeModule } from 'ngx-barcode';\r\nimport { QuaggaComponent } from './components/quagga/quagga.component';\r\nimport { AngQuaggaComponent } from './components/ang-quagga/ang-quagga.component';\nimport { ImageCaptureComponent } from './components/image-capture/image-capture.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    MainNavComponent,\r\n    HomepageComponent,\r\n    EmployeeListComponent,\r\n    EmployeeUserComponent,\r\n    ScannerComponent,\r\n    BarCodeScannerComponent,\r\n    QuaggaComponent,\r\n    AngQuaggaComponent,\r\n    ImageCaptureComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    BarecodeScannerLivestreamModule,\r\n    NgxBarcodeModule,\r\n    MatSelectModule\r\n    \r\n  ],\r\n  providers: [DataService,QrCodeReader],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"\\n<main-nav>\\n  <p>\\n    ang-quagga works!\\n  </p>\\n</main-nav>\"","import { Component, OnInit } from '@angular/core';\nimport Quagga from 'quagga';\n\n\n@Component({\n  selector: 'app-ang-quagga',\n  templateUrl: './ang-quagga.component.html',\n  styleUrls: ['./ang-quagga.component.css']\n})\nexport class AngQuaggaComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() {\n    \n   \n}\n}\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .errspan {\\r\\n    float: right;\\r\\n    margin-right: 6px;\\r\\n    margin-top: 20px;\\r\\n    position: relative;\\r\\n    z-index: 2;\\r\\n    color: red;\\r\\n    cursor:pointer;\\r\\n}\\r\\n  \\r\\n  @media only screen and (min-width: 992px) {\\r\\n    \\r\\n    form{\\r\\n        margin-left: 190px;\\r\\n    }\\r\\n    \\r\\n} \"","module.exports = \"<main-nav>\\n\\n  \\n  <select name=\\\"types\\\" [(ngModel)]=\\\"selectedLevel\\\" (change)=\\\"selected()\\\">\\n    <option value=\\\"code_128\\\">code_128_reader</option>\\n    <option value=\\\"ean\\\">ean_reader</option>\\n    <option value=\\\"code_39\\\">code_39_reader</option>\\n    <option value=\\\"code_39_vin\\\">code_39_vin_reader</option>\\n    <option value=\\\"codebar\\\">codabar_reader</option>\\n    <option value=\\\"upc\\\">upc_reader</option>\\n    <option value=\\\"upc_e\\\">upc_e_reader</option>\\n    <option value=\\\"12of5\\\">i2of5_reader</option>\\n  </select>\\n\\n\\n\\n\\n<barcode-scanner-livestream  type=\\\"{{selectedLevel}}\\\" (valueChanges)=\\\"onValueChanges($event)\\\"></barcode-scanner-livestream>\\n  \\n  <div [hidden]=\\\"!barcodeValue\\\">\\n      {{barcodeValue}}\\n  </div>\\n\\n</main-nav>\\n\\n\"","// import { Component, OnInit } from '@angular/core';\nimport { BarecodeScannerLivestreamComponent } from 'ngx-barcode-scanner';\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-bar-code-scanner',\n   templateUrl: './bar-code-scanner.component.html',\n  styleUrls: ['./bar-code-scanner.component.css']\n})\nexport class BarCodeScannerComponent implements AfterViewInit {\n\n  @ViewChild(BarecodeScannerLivestreamComponent)\n  barecodeScanner: BarecodeScannerLivestreamComponent;\n  \n  barcodeValue;\n  barcodeType;\n  selectedLevel;\n  name;\n\n  ngAfterViewInit() {\n    \n      \n  }\n\n\n  selected(){\n    // console.log(this.selectedLevel);\n    this.barecodeScanner.start();\n  }\n\n  onValueChanges(result){\n      this.barcodeValue = result.codeResult.code;\n      this.name = this.barcodeValue;\n  }\n}\n","module.exports = \".mat-list-icon {\\r\\n    color: rgba(0, 0, 0, 0.54);\\r\\n  }\\r\\n\\r\\n\\r\\n  .is-active {\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n\\r\\n  .mat-list-item:hover {\\r\\n    background-color: orange;\\r\\n  }\"","module.exports = \"<main-nav>\\n  <mat-list >\\n      <!-- <md-icon icon=\\\"backspace\\\"></md-icon>  -->\\n    \\n    <h3 mat-subheader>Employee List</h3>\\n    <mat-list-item *ngFor=\\\"let obj of data\\\" style=\\\"cursor: pointer;\\\"  [routerLink]=\\\"[ '/employee',obj.login]\\\" >\\n      <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\\n      <img matListAvatar [src]=\\\"obj.avatar_url\\\" alt=\\\"Image not available\\\">\\n      <h4 mat-line>{{obj.login}}</h4>\\n      <p mat-line> {{obj.node_id }} </p>\\n    </mat-list-item>\\n\\n  </mat-list>  \\n</main-nav>\"","import { Component, OnInit } from '@angular/core';\nimport {DataService} from  '../../services/data.service';\n\nexport interface Section {\n  name: string;\n  updated: Date;\n}\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  data = [];\n\n  constructor(private dataservice : DataService) { }\n\n  ngOnInit() {\n    this.dataservice.getGitUsers().subscribe(users =>{\n    //  console.log(users);\n       this.data = users;\n     });\n \n  }\n\n  folders: Section[] = [\n    {\n      name: 'Photos',\n      updated: new Date('1/1/16'),\n    },\n    {\n      name: 'Recipes',\n      updated: new Date('1/17/16'),\n    },\n    {\n      name: 'Work',\n      updated: new Date('1/28/16'),\n    }\n  ];\n\n\n}\n","module.exports = \"\"","module.exports = \"<main-nav>\\n    \\n    <span >\\n        <i class=\\\"fa fa-arrow-circle-left\\\" style=\\\"font-size:48px;color:red\\\" (click)=\\\"myFunction()\\\"></i>\\n   </span>\\n    <mat-card class=\\\"example-card\\\">\\n        <mat-card-header>\\n            \\n            <mat-card-title> <label for=\\\"location\\\">Location:</label>\\n              <h1>{{data.location}}</h1></mat-card-title>\\n            <mat-card-subtitle> <label for=\\\"Joined\\\">Joined:</label>\\n              <h1>{{data.created_at | date}}</h1></mat-card-subtitle>\\n          </mat-card-header>\\n\\n\\n        <img mat-card-image [src]=\\\"data.avatar_url\\\" alt=\\\"Image Missing\\\" height=\\\"600px;\\\" width=\\\"120px;\\\">\\n        <mat-card-content>\\n          <label for=\\\"name\\\">Name:</label>\\n          <h1>{{data.name}}</h1>\\n\\n          <label for=\\\"Followers\\\">Followers:</label>\\n          <h1>{{data.followers}}</h1>\\n\\n\\n          <label for=\\\"following\\\">Following:</label>\\n          <h1>{{data.following}}</h1>\\n\\n\\n        </mat-card-content>\\n\\n\\n      \\n      </mat-card>\\n\\n\\n\\n</main-nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router, Params} from '@angular/router'\nimport { ActivatedRoute } from '@angular/router';\nimport {DataService} from  '../../services/data.service';\n\n@Component({\n  selector: 'app-employee-user',\n  templateUrl: './employee-user.component.html',\n  styleUrls: ['./employee-user.component.css']\n})\nexport class EmployeeUserComponent implements OnInit {\n\n  name: string;\n  private sub: any;\n  data = [];\n\n  constructor(private route: ActivatedRoute,private dataservice : DataService,private router: Router) {\n   \n   }\n\n   ngOnInit() {\n\n    var status = localStorage.getItem('logged');\n    console.log(status); \n    if(status !== 'true'){\n      //console.log(\"Getting in\");\n      console.log(\"getting in\");\n      this.router.navigate(['/login']);\n    }\n\n    this.sub = this.route.params.subscribe(params => {\n       this.name = params['id']; // (+) converts string 'id' to a number\n      console.log(this.name);\n\n      this.dataservice.getGitUsersbyid(this.name).subscribe(user_details =>{\n        console.log([user_details]);\n         this.data = user_details;\n       });\n       // In a real app: dispatch action to load the details here.\n    });\n  }\n\n  myFunction(){\n    console.log(\"function getting fired\");\n    window.history.back();\n\n  }\n\n\n\n}\n\n\n","module.exports = \".mat-tab-group {\\r\\n    margin-bottom: 48px;\\r\\n  }\\r\\n\\r\\n  ::ng-deep mat-tab-header {\\r\\n    -ms-grid-row-align: center;\\r\\n        align-self: center;\\r\\n  }\\r\\n\\r\\n\\r\\n \\r\\n\"","module.exports = \"<main-nav>\\r\\n    <!-- style=\\\"width:800px; margin:0 auto;\\\"  -->\\r\\n   <div >\\r\\n    \\r\\n      <mat-tab-group mat-align-tabs=\\\"center\\\">\\r\\n          <mat-tab label=\\\"Pending\\\">\\r\\n              <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\r\\n                  <mat-grid-tile\\r\\n                      *ngFor=\\\"let tile of tiles\\\"\\r\\n                      [colspan]=\\\"tile.cols\\\"\\r\\n                      [rowspan]=\\\"tile.rows\\\"\\r\\n                      [style.background]=\\\"tile.color\\\">\\r\\n                    {{tile.text}}\\r\\n                  </mat-grid-tile>\\r\\n                </mat-grid-list>\\r\\n          </mat-tab>\\r\\n          <mat-tab label=\\\"Collected\\\">\\r\\n              \\r\\n          </mat-tab>\\r\\n          <mat-tab label=\\\"Total\\\">\\r\\n              <mat-grid-list cols=\\\"4\\\" rowHeight=\\\"100px\\\">\\r\\n                  <mat-grid-tile\\r\\n                      *ngFor=\\\"let tile of tiles\\\"\\r\\n                      [colspan]=\\\"tile.cols\\\"\\r\\n                      [rowspan]=\\\"tile.rows\\\"\\r\\n                      [style.background]=\\\"tile.color\\\">\\r\\n                    {{tile.text}}\\r\\n                  </mat-grid-tile>\\r\\n                </mat-grid-list>\\r\\n          </mat-tab>\\r\\n     </mat-tab-group>\\r\\n     \\r\\n   </div>\\r\\n      \\r\\n\\r\\n   \\r\\n</main-nav>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {DataService} from  '../../services/data.service';\r\nimport Swal from 'sweetalert2'\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface Tile {\r\n  color: string;\r\n  cols: number;\r\n  rows: number;\r\n  text: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent implements OnInit {\r\n\r\n  data = [];\r\n\r\n  constructor(private dataservice : DataService,private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    // this.dataservice.listallcustomersforcurrentmonth().subscribe(customers =>{\r\n    //  console.log(customers.result);\r\n    //   this.data = customers.result;\r\n    // });\r\n\r\n   \r\n\r\n    this.data = [\r\n      {\r\n        name:\"ram\",\r\n        age:\"21\",\r\n        gender:\"male\",\r\n        address:\"chennai\"\r\n      },\r\n      {\r\n        name:\"jiva\",\r\n        age:\"21\",\r\n        gender:\"male\",\r\n        address:\"chennai\"\r\n      },{\r\n        name:\"appu\",\r\n        age:\"24\",\r\n        gender:\"male\",\r\n        address:\"madurai\"\r\n      },\r\n    ];\r\n  }\r\n\r\n  tiles: Tile[] = [\r\n    {text: 'two', cols: 1, rows: 2, color: 'lightgreen'},\r\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\r\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\r\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\r\n  ];\r\n \r\n\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\n\\n<main-nav>\\n    <!-- <input type=\\\"file\\\" capture=\\\"camera\\\" accept=\\\"image/*\\\" id=\\\"cameraInput\\\" name=\\\"cameraInput\\\" (change)=\\\"onFileSelected($event)\\\">\\n<button type=\\\"button\\\" (click)=\\\"onUpload()\\\">Upload File</button>\\n\\n\\n      <img id=\\\"blah\\\" src=\\\"#\\\" alt=\\\"your image\\\" > -->\\n\\n      <input type='file' capture=\\\"camera\\\" accept=\\\"image/*\\\" id=\\\"cameraInput\\\" name=\\\"cameraInput\\\" (change)=\\\"readURL($event);\\\" />\\n      <button type=\\\"button\\\" (click)=\\\"onUpload()\\\">Upload File</button>\\n\\n<br>\\n<br>\\n<img id=\\\"blah\\\" [src]=\\\"imageSrc || 'http://placehold.it/180'\\\" alt=\\\"your image\\\" width=\\\"80\\\" height=\\\"80\\\"/>\\n\\n<h1>{{address}}</h1>    \\n\\n</main-nav>\"","import { Component, OnInit } from '@angular/core';\nimport {DataService} from  '../../services/data.service';\nimport Swal from 'sweetalert2'\n\ninterface HTMLInputEvent extends Event {\n  target: HTMLInputElement & EventTarget;\n}\n\n\n@Component({\n  selector: 'app-image-capture',\n  templateUrl: './image-capture.component.html',\n  styleUrls: ['./image-capture.component.css']\n})\nexport class ImageCaptureComponent implements OnInit {\n  data = [];\n  file: File = null;\n  geolocationPosition : any;\n  imageSrc: string;\n  address : string;\n\n  lat :number;\n  lon :number;\n \n\n  constructor(private dataservice : DataService) { }\n\n \n\n  ngOnInit(){\n\n    function getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(showPosition);\n        //navigator.geolocation.getCurrentPosition(this.showPosition);\n\n      } else { \n        var error = \"Geolocation is not supported by this browser.\";\n        Swal.fire(\"Address\", (error).toString());\n      }\n    }\n    \n    function showPosition(position) {\n  \n     \n      // this.lat = position.coords.latitude;\n      // this.lon = position.coords.longitude;\n      Swal.fire((position.coords.longitude).toString(), (position.coords.latitude).toString());\n\n      \n      \n    };\n    \n    getLocation();\n\n\n\n\n}\n\n\n\n  readURL(event?: HTMLInputEvent): void {\n  console.log(\"Reading url initilises\");\n    if (event.target.files && event.target.files[0]) {\n        this.file = event.target.files[0];\n\n        const reader = new FileReader();\n        reader.onload = e => this.imageSrc = reader.result;\n\n        reader.readAsDataURL(this.file);\n       // console.log(this.file);\n    }\n  \n}\n\nonUpload()\n  {\n    \n\n    console.log(`Latitude ----> ${this.lat}`);\n    // console.log(this.file);\n    // console.log(this.geolocationPosition.coords);\n    // console.log(this.geolocationPosition.coords.latitude);\n    // console.log(this.geolocationPosition.coords.longitude);\n    //Swal.fire(\"Address\", (this.geolocationPosition.coords.longitude).toString());\n\n    // this.dataservice.getGoogleMapsresult(this.geolocationPosition.coords.latitude,this.geolocationPosition.coords.longitude).subscribe(result =>{\n    // this.dataservice.getGoogleMapsresult(this.lat,this.lon).subscribe(result =>{\n    //   //Swal.fire(\"Done\", \"Subscribed into service\");\n    //    Swal.fire(\"Address\", result.error_message);\n    //      this.data = result;\n    //   this.address = result.error_message;\n\n    //    });\n\n    //this.address = \"10-337,Kuber appartments, 6th Main Rd, Vijaya Nagar, Velachery, Chennai, Tamil Nadu 600042, India\";\n    \n  }\n\n}\n","module.exports = \"body{\\r\\n    background-color:#5286F3;\\r\\n    font-size:14px;\\r\\n    color:#fff;\\r\\n}\\r\\n.simple-login-container{\\r\\n    width:500px;\\r\\n    max-width:100%;\\r\\n    margin:50px auto;\\r\\n    \\r\\n}\\r\\n.simple-login-container h2{\\r\\n    text-align:center;\\r\\n    font-size:20px;\\r\\n}\\r\\n.simple-login-container .btn-login{\\r\\n    background-color:#FF5964;\\r\\n    color:#fff;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n\\r\\n\\r\\n  <div class=\\\"simple-login-container\\\">\\r\\n    <h2>Login Form</h2>\\r\\n    <form  #myform=\\\"ngForm\\\"  (ngSubmit)=\\\"register(myform)\\\" class=\\\"form form-register\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 form-group\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"user_name\\\" required=\\\"true\\\" placeholder=\\\"Username\\\" ngModel >\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 form-group\\\">\\r\\n            <input type=\\\"password\\\" placeholder=\\\"Enter your Password\\\" name=\\\"password\\\" required=\\\"true\\\" class=\\\"form-control\\\" ngModel >\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 form-group\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-block btn-login\\\" >Login </button>\\r\\n            \\r\\n        </div>\\r\\n    </div>\\r\\n  </form>\\r\\n  \\r\\n  </div>\\r\\n\\r\\n\\r\\n  <!-- <button mat-raised-button\\tcolor=\\\"primary\\\">Click me!</button> -->\\r\\n\\r\\n \"","import { Component, OnInit } from '@angular/core';\r\nimport {DataService} from  '../../services/data.service';\r\nimport Swal from 'sweetalert2'\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private dataservice : DataService,private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    localStorage.setItem('logged', \"false\");\r\n  }\r\n\r\n   arr: any=[];    \r\n\r\n   register(form) {\r\n    this.arr = form.value\r\n    var user_name = \"godb\"; \r\n    var password = \"godb\"; \r\n    \r\n    console.log(this.arr);\r\n\r\n    if(this.arr.user_name !== user_name || this.arr.password !== password ){\r\n      Swal.fire(\"Login failed\", 'Please Try again with correct credentials');\r\n    }\r\n    else{\r\n\r\n      this.router.navigate(['/employeelist']);\r\n      localStorage.setItem('logged', \"true\");\r\n\r\n    }\r\n   \r\n\r\n    // this.dataservice.checklogin(this.arr).subscribe(check =>{\r\n    //   console.log(check);\r\n    //   if(check.status != 200){\r\n    //     Swal.fire(check.message, 'Please Try again with correct credentials');\r\n    //   }\r\n    //   else{\r\n    //     Swal.fire(check.message, 'Success');\r\n    //     this.router.navigate(['/home']);\r\n\r\n    //   }\r\n      \r\n    // });\r\n   \r\n    \r\n   }\r\n\r\n}\r\n","module.exports = \" /* In order to place the tracking correctly */\\r\\n canvas.drawing, canvas.drawingBuffer {\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 0;\\r\\n}\"","module.exports = \"\\n<main-nav>\\n  <p>\\n    quagga works!\\n  </p>\\n\\n   <!-- Div to show the scanner -->\\n   <div id=\\\"scanner-container\\\"></div>\\n   <input type=\\\"button\\\" id=\\\"btn\\\" value=\\\"Start/Stop the scanner\\\"  (click)=\\\"toggler()\\\"/>\\n\\n\\n</main-nav>\"","import { Component, OnInit } from '@angular/core';\nimport Quagga from 'quagga'; // ES6\nimport { MatButtonToggleGroup } from '@angular/material';\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-quagga',\n  templateUrl: './quagga.component.html',\n  styleUrls: ['./quagga.component.css']\n})\n\nexport class QuaggaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  _scannerIsRunning: Boolean;\n\n\n  startScanner() {\n    Quagga.init({\n        inputStream: {\n            name: \"Live\",\n            type: \"LiveStream\",\n            target: document.querySelector('#scanner-container'),\n            constraints: {\n                width: 480,\n                height: 320,\n                facingMode: \"environment\"\n            },\n        },\n        decoder: {\n            readers: [\n                \"code_128_reader\",\n                \"ean_reader\",\n                \"ean_8_reader\",\n                \"code_39_reader\",\n                \"code_39_vin_reader\",\n                \"codabar_reader\",\n                \"upc_reader\",\n                \"upc_e_reader\",\n                \"i2of5_reader\"\n            ],\n            debug: {\n                showCanvas: true,\n                showPatches: true,\n                showFoundPatches: true,\n                showSkeleton: true,\n                showLabels: true,\n                showPatchLabels: true,\n                showRemainingPatchLabels: true,\n                boxFromPatches: {\n                    showTransformed: true,\n                    showTransformedBox: true,\n                    showBB: true\n                }\n            }\n        },\n\n    }, function (err) {\n        if (err) {\n            console.log(err);\n            return\n        }\n\n        console.log(\"Initialization finished. Ready to start\");\n        Quagga.start();\n\n        // Set flag to is running\n        this._scannerIsRunning = true;\n    });\n\n    Quagga.onProcessed(function (result) {\n        var drawingCtx = Quagga.canvas.ctx.overlay,\n        drawingCanvas = Quagga.canvas.dom.overlay;\n\n        if (result) {\n            if (result.boxes) {\n                drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute(\"width\")), parseInt(drawingCanvas.getAttribute(\"height\")));\n                result.boxes.filter(function (box) {\n                    return box !== result.box;\n                }).forEach(function (box) {\n                    Quagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, { color: \"green\", lineWidth: 2 });\n                });\n            }\n\n            if (result.box) {\n                Quagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, { color: \"#00F\", lineWidth: 2 });\n            }\n\n            if (result.codeResult && result.codeResult.code) {\n                Quagga.ImageDebug.drawPath(result.line, { x: 'x', y: 'y' }, drawingCtx, { color: 'red', lineWidth: 3 });\n            }\n        }\n    });\n\n\n    Quagga.onDetected(function (result) {\n        console.log(\"Barcode detected and processed : [\" + result.codeResult.code + \"]\", result);\n        Swal.fire(\"Barcode detected and processed : [\" + result.codeResult.code + \"]\", result);\n    });\n}\n\n\n\ntoggler(){\n  console.log(\"quagga\");\n  if (this._scannerIsRunning) {\n    Quagga.stop();\n} else {\n    this.startScanner();\n}\n}\n\n}\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .errspan {\\r\\n    float: right;\\r\\n    margin-right: 6px;\\r\\n    margin-top: 20px;\\r\\n    position: relative;\\r\\n    z-index: 2;\\r\\n    color: red;\\r\\n    cursor:pointer;\\r\\n}\\r\\n  \\r\\n  @media only screen and (min-width: 992px) {\\r\\n    \\r\\n    form{\\r\\n        margin-left: 190px;\\r\\n    }\\r\\n    \\r\\n} \"","module.exports = \"\\n<main-nav>\\n\\n  <form class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Scanner input\\\" [(ngModel)]=\\\"name\\\" #ctrl=\\\"ngModel\\\" name=\\\"scanner\\\">\\n      \\n    </mat-form-field>\\n  \\n    <br> \\n    <input  type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"onFileChange($event)\\\"  placeholder=\\\"QR-Scanner input\\\">\\n     \\n    <span>\\n        <i class=\\\"fa fa-qrcode errspan\\\" > </i>    \\n      </span>\\n\\n\\n  </form>\\n\\n</main-nav>\\n\\n\\n\"","import { Component, OnInit,OnDestroy  } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { QrCodeReader } from './scanner.service';\n\n\n\n@Component({\n  selector: 'app-scanner',\n  templateUrl: './scanner.component.html',\n  styleUrls: ['./scanner.component.css']\n})\n\n\nexport class ScannerComponent  {\n\n  subscription: Subscription;\n  name: string = '';\n\n  constructor(private qrReader: QrCodeReader) { \n    \n  }\n\n//implements OnDestroy\n\n  // ngOnDestroy(): void {\n  //   this.subscription.unsubscribe();\n  // }\n\n  onFileChange(event) {\n    const file = event.target.files[0];\n    this.subscription = this.qrReader.decode(file)\n      .subscribe(decodedString =>{\n       // console.log(decodedString);\n        this.name = decodedString;\n\n      });\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\ndeclare const qrcode: any;\r\n\r\n@Injectable()\r\nexport class QrCodeReader {\r\n\r\n  decode(file: any): Observable<string> {\r\n\r\n    return new Observable(observer => {\r\n\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = (e: any) => {\r\n        const data = e.target.result;\r\n        //console.log(data);\r\n        qrcode.callback = (res) => {\r\n          observer.next(res);\r\n          observer.complete();\r\n        };\r\n        qrcode.decode(data);\r\n\r\n      };\r\n\r\n    });\r\n  }\r\n}\r\n","module.exports = \".sidenav-container {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  width: 200px;\\r\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\r\\n}\\r\\n\\r\\n.is-active {\\r\\n  background-color: cyan;\\r\\n}\\r\\n\\r\\n.mat-tab-group {\\r\\n  margin-bottom: 48px;\\r\\n}\\r\\n\\r\\n.title-center {\\r\\n  margin: 0 auto;\\r\\n}\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\r\\n  <mat-sidenav\\r\\n    #drawer\\r\\n    class=\\\"sidenav\\\"\\r\\n    fixedInViewport=\\\"false\\\"\\r\\n    [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n    [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n    [opened]=\\\"!(isHandset$ | async)\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\">Hello Admin...!!!</mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n\\r\\n      <!-- <a mat-list-item routerLink=\\\"/home\\\" [routerLinkActive]=\\\"['is-active']\\\">Link 1</a> -->\\r\\n      <a mat-list-item routerLink=\\\"/employeelist\\\" [routerLinkActive]=\\\"['is-active']\\\">Employee List</a>\\r\\n       <!-- <a mat-list-item routerLink=\\\"/scanner\\\" [routerLinkActive]=\\\"['is-active']\\\">QR Code Scanner</a> -->\\r\\n    <a mat-list-item routerLink=\\\"/bar-codescanner\\\" [routerLinkActive]=\\\"['is-active']\\\">Bar Code Scanner</a>\\r\\n      <!-- <a mat-list-item routerLink=\\\"/quagga\\\" [routerLinkActive]=\\\"['is-active']\\\">Quagga</a>\\r\\n    <a mat-list-item routerLink=\\\"/ang-quagga\\\" [routerLinkActive]=\\\"['is-active']\\\">Ang-Quagga</a> -->\\r\\n       <!--   <a mat-list-item routerLink=\\\"/home\\\" [routerLinkActive]=\\\"['is-active']\\\">Link 7</a>\\r\\n      <a mat-list-item routerLink=\\\"/home\\\" [routerLinkActive]=\\\"['is-active']\\\">Link 8</a>\\r\\n      <a mat-list-item routerLink=\\\"/home\\\" [routerLinkActive]=\\\"['is-active']\\\">Link 9</a> -->\\r\\n      <a mat-list-item routerLink=\\\"/image-capture\\\" [routerLinkActive]=\\\"['is-active']\\\">Image-Capture</a>\\r\\n      <a mat-list-item routerLink=\\\"/login\\\" [routerLinkActive]=\\\"['is-active']\\\">Logout</a>\\r\\n\\r\\n\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        aria-label=\\\"Toggle sidenav\\\"\\r\\n        mat-icon-button\\r\\n        (click)=\\\"drawer.toggle()\\\"\\r\\n        *ngIf=\\\"isHandset$ | async\\\">\\r\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <span class=\\\"title-center\\\">Employee Portal</span>\\r\\n      \\r\\n    </mat-toolbar>\\r\\n    <ng-content></ng-content>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'main-nav',\r\n  templateUrl: './main-nav.component.html',\r\n  styleUrls: ['./main-nav.component.css']\r\n})\r\nexport class MainNavComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches)\r\n    );\r\n    \r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n  \r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders }    from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  \r\n\r\n  giturl = \"https://api.github.com/users\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getGitUsers():Observable<any> {\r\n    return this.http.get(this.giturl);\r\n  }\r\n\r\n  getGitUsersbyid(name):Observable<any> {\r\n    return this.http.get(this.giturl+'/'+name);\r\n  }\r\n\r\n  getGoogleMapsresult(lat,lon):Observable<any> {\r\n    return this.http.get(\"https://maps.googleapis.com/maps/api/geocode/json?latlng=\"+ lat +\",\"+lon+\"&key=AIzaSyAxBm68HZLg514natiAMd4ET9-LLoGSzuA\");\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}